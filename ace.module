<?php
define('ACE_VERSION', '0.2.0');

function ace_element_info_alter(&$elements) {
  $elements['textarea']['#after_build'][] = 'ace_after_build_textarea';
  $elements['text_format']['#after_build'][] = 'ace_after_build_text_format';
}

function ace_library() {
  $ace_path = variable_get('ace_path', 'sites/all/libraries/ace');
  $libraries = array();
  $libraries['ace'] = array(
    'title' => 'ace',
    'version' => ACE_VERSION,
    'js' => array(
      $ace_path . '/ace.js' => array(),
    ),
  );
  $libraries['ace.drupal'] = array(
    'title' => 'ace.drupal',
    'version' => ACE_VERSION,
    'js' => array(
      drupal_get_path('module', 'ace') . '/ace.js' => array(),
    ),
    'css' => array(
      drupal_get_path('module', 'ace') . '/ace.css' => array(),
    ),
    'dependencies' => array(
      array('ace', 'ace'),
    ),
  );
  $ace_plugins = ace_get_plugins();
  foreach ($ace_plugins as $key => $component) {
    foreach ($component as $id => $plugin) {
      if (!is_array(@$plugin['attached'])) {
        $plugin['attached'] = array();
      }
      $plugin['attached'] += array(
        'js' => array(),
        'css' => array(),
        'library' => array(),
      );
      $lib = array(
        'title' => $id,
        'version' => ACE_VERSION,
        'dependencies' => array(
          array('ace', 'ace.drupal'),
        ),
      );
      foreach ($plugin['attached']['library'] as $dep) {
        $lib['dependencies'][] = $dep;
      }
      foreach (array('js', 'css') as $type) {
        foreach ($plugin['attached'][$type] as $data => $options) {
          if (!is_array($options)) {
            $data = $options;
            $options = array();
          }
          if (is_numeric($data)) {
            $data = $options['data'];
          }
          $lib[$type][$data] = $options;
        }
      }
      $libraries['ace.' . $key . '.' . $id] = $lib;
    }
  }
  return $libraries;
}

function ace_after_build_textarea($element) {
  if (array_key_exists('#ace_format', $element)) {
    $format = $element['#ace_format'];
    $element['#attributes']['data-ace-format'] = $format;
    $settings = ace_user_settings();
    $ace_plugins = ace_get_plugins();
    foreach ($settings as $component => $setting) {
      $lib = 'ace.' . $component . '.';
      if (array_key_exists($format, $setting)) {
        $lib .= $setting[$format];
      } else {
        $lib .= 'default';
      }
      $element['#attached']['library'][] = array('ace', $lib);
    }
  }
  return $element;
}

function ace_after_build_text_format($element) {
  if (array_key_exists('format', $element)) {
    $default_format = $element['#format'];
    $formats = array_keys($element['format']['format']['#options']);
    $settings = ace_user_settings();
    foreach ($settings as $component => $setting) {
      foreach ($formats as $format) {
        $lib = 'ace.' . $component . '.';
        if (array_key_exists($format, $setting)) {
          $lib .= $setting[$format];
        } else {
          $lib .= 'default';
        }
        $element['#attached']['library'][] = array('ace', $lib);
      }
    }
    foreach (array_keys($element) as $key) {
      if ($key[0] != '#' && @$element[$key]['#type'] == 'textarea') {
        $element[$key]['#ace_processed'] = TRUE;
      }
    }
    $element['#attributes']['class'][] = 'ace-editor';
  }
  return $element;
}

function ace_menu() {
  return array(
    'admin/config/content/ace' => array(
      'title' => t('Ace Editor'),
      'description' => t('Configure Ace editor for different input formats.'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ace_settings_form'),
      'access arguments' => array('administer site configuration'),
    ),
  );
}

function ace_permission() {
  return array(
    'use ace editor' => array(
      'title' => t('Use the Ace editor'),
      'description' => t('Enables users to use the Ace editor instead of textareas.'),
    ),
  );
}

function ace_form_user_profile_form_alter(&$form, &$form_state) {
  if ($form['#user_category'] == 'account') {
    $account = $form['#user'];
    if (user_access('use ace editor', $account)) {
      $settings = ace_user_settings();
      $themes = array();
      foreach (ace_themes() as $key => $theme) {
        $themes[$key] = $theme['title'];
      }
      $keybindings = array();
      foreach (ace_keybindings() as $key => $keybinding) {
        $keybindings[$key] = $keybinding['title'];
      }
      $form['ace_editor'] = array(
        '#type' => 'fieldset',
        '#title' => t('Ace Editor'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
        'ace_theme' => array(
          '#type' => 'select',
          '#title' => t('Theme'),
          '#options' => $themes,
          '#default_value' => $settings['themes']['default'],
        ),
        'ace_keybinding' => array(
          '#type' => 'select',
          '#title' => t('Keybinding'),
          '#options' => $keybindings,
          '#default_value' => $settings['keybindings']['default'],
        ),
      );
    }
  }
}

function ace_user_presave(&$edit, $account, $category) {
  $edit['data']['ace_theme'] = $edit['ace_theme'];
  $edit['data']['ace_keybinding'] = $edit['ace_keybinding'];
}

function _ace_default() {
  return array(
    'modes' => array(
      'default' => 'text',
    ),
    'toolbars' => array(
      'default' => 'default',
    ),
    'themes' => array(
      'default' => 'textmate',
    ),
    'keybindings' => array(
      'default' => 'default',
    ),
  );
}

function ace_init() {
  $settings = ace_user_settings();
  drupal_add_js(array('ace' => $settings), 'setting');
}

function ace_settings() {
  $global = unserialize(variable_get('ace_configuration', serialize(array())));
  $settings = array_merge(_ace_default(), $global);
  return $settings;
}

function ace_user_settings() {
  $settings = ace_settings();
  global $user;
  if ($user->data && array_key_exists('ace_theme', $user->data)) {
    $settings['themes']['default'] = $user->data['ace_theme'];
  }
  if ($user->data && array_key_exists('ace_keybinding', $user->data)) {
    $settings['keybindings']['default'] = $user->data['ace_keybinding'];
  }
  return $settings;
}

function ace_settings_form($form, $form_state) {
  $settings = ace_settings();
  $modes = array();
  $ace_plugins = ace_get_plugins();
  foreach ($ace_plugins['modes'] as $key => $mode) {
    $modes[$key] = $mode['title'];
  }
  $toolbars = array();
  foreach ($ace_plugins['toolbars'] as $key => $toolbar) {
    $toolbars[$key] = $toolbar['title'];
  }
  $themes = array();
  foreach ($ace_plugins['themes'] as $key => $theme) {
    $themes[$key] = $theme['title'];
  }
  $keybindings = array();
  foreach ($ace_plugins['keybindings'] as $key => $keybinding) {
    $keybindings[$key] = $keybinding['title'];
  }
  $form['ace_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Ace library path'),
    '#default_value' => variable_get('ace_path', 'sites/all/libraries/ace'),
  );
  $form['ace_configuration'] = array(
    '#type' => 'value',
    '#value' => serialize($settings),
  );
  $form['default'] = array(
    '#type' => 'fieldset',
    '#title' => t('Default'),
    'ace[modes][default]' => array(
      '#type' => 'select',
      '#options' => $modes,
      '#default_value' => $settings['modes']['default'],
    ),
    'ace[toolbars][default]' => array(
      '#type' => 'select',
      '#options' => $toolbars,
      '#default_value' => $settings['toolbars']['default'],
    ),
    'ace[themes][default]' => array(
      '#type' => 'select',
      '#options' => $themes,
      '#default_value' => $settings['themes']['default'],
    ),
    'ace[keybindings][default]' => array(
      '#type' => 'select',
      '#options' => $keybindings,
      '#default_value' => $settings['keybindings']['default'],
    ),
  );
  foreach (filter_formats() as $id => $format) {
    $form[$id] = array(
      '#type' => 'fieldset',
      '#title' => $format->name,
      'ace[modes][' . $id . ']' => array(
        '#type' => 'select',
        '#options' => $modes,
        '#default_value' => @$settings['modes'][$id],
      ),
      'ace[toolbars][' . $id . ']' => array(
        '#type' => 'select',
        '#options' => $toolbars,
        '#default_value' => @$settings['toolbars'][$id],
      ),
    );
  }
  return system_settings_form($form);
}

function ace_settings_form_validate(&$form, &$form_state) {
  foreach (array_keys($form_state['values']) as $key) {
    if (preg_match('/^ace\[/', $key)) {
      unset($form_state['values'][$key]);
    }
  }
  $form_state['values']['ace_configuration'] = serialize($form_state['input']['ace']);
}

function ace_get_plugins() {
  $plugins = array(
    'modes' => _ace_modes(),
    'themes' => _ace_themes(),
    'toolbars' => _ace_toolbars(),
    'keybindings' => _ace_keybindings(),
  );
  $plugins['modes'] = _ace_modes();
  drupal_alter('ace_plugins', $plugins);
  return $plugins;
}

function _ace_modes() {
  $ace_path = variable_get('ace_path', 'sites/all/libraries/ace');
  $modefiles = glob($ace_path . '/mode-*.js');
  $modes = array();
  foreach ($modefiles as $file) {
    if (preg_match('/mode-(.*?).js$/', $file, $matches)) {
      $modes[$matches[1]] = array(
        'title' => $matches[1],
        'module' => 'ace/mode/' . $matches[1],
        'attached' => array(
          'js' => array($file),
        ),
      );
    }
  }
  return $modes;
}

function _ace_themes() {
  $ace_path = variable_get('ace_path', 'sites/all/libraries/ace');
  $themefiles = glob($ace_path . '/theme-*.js');
  $themes = array();
  foreach ($themefiles as $file) {
    if (preg_match('/theme-(.*?).js$/', $file, $matches)) {
      $themes[$matches[1]] = array(
        'title' => $matches[1],
        'module' => 'ace/theme/' . $matches[1],
        'attached' => array(
          'js' => array($file),
        ),
      );
    }
  }
  return $themes;
}

function _ace_toolbars() {
  $toolbars = array(
    'default' => array(
      'title' => t('No toolbar'),
      'module' => 'ace/toolbar/default',
    ),
  );
  return $toolbars;
}

function _ace_keybindings() {
  $ace_path = variable_get('ace_path', 'sites/all/libraries/ace');
  $keybindings = array(
    'default' => array(
      'title' => t('Default'),
      'module' => 'ace/keyboard/keybinding/default',
    ),
    'vim' => array(
      'title' => t('Vim'),
      'module' => 'ace/keyboard/keybinding/vim',
      'attached' => array(
        'js' => array($ace_path . '/keybinding-vim.js'),
      ),
    ),
    'emacs' => array(
      'title' => t('Emacs'),
      'module' => 'ace/keyboard/keybinding/emacs',
      'attached' => array(
        'js' => array($ace_path . '/keybinding-emacs.js'),
      ),
    ),
  );
  return $keybindings;
}
